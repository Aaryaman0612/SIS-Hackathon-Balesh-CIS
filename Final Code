/***
        [
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#         ^  ^         #",
            "#       ########       #",
            "#      ##########      #",
            "#@    ############    $#",
            "########################",
        ]
***/

//               Change these to whatever you want!
                     var playerName = "Cubey";
  var playerColor = color(random(255), random(255), random(255));

//                          the code

//                          //===\\
//                         ||{

var input = [];


keyPressed = function() {
    input[keyCode] = true;
};

keyReleased = function() {
    input[keyCode] = false;
};

textFont(createFont("Times New Roman"));

var deaths = 0;

var seconds = 0;
var minutes = 0;

var scene = "play";

var LevelStatus = "playing";

var l = 0;

var levelMap = [
    {
        level: 1,
        name: "Level 1: Getting Started",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#         ^  ^         #",
            "#       ########       #",
            "#      ##########      #",
            "#@    ############    $#",
            "########################",
        ],
    },
    {
        level: 2,
        name: "Question 1: English",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   +   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 3,
        name: "Level 2: A Little Harder",
        map: [
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                     $#",
            "#                     ##",
            "#         ^^^###%%%%####",
            "#@  ^^^#################",
            "########################",
        ],
    },
    {
        level: 4,
        name: "Question 2: English",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   -   +   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 5,
        name: "Level 3: Leap of Faith",
        map: [
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#^                     #",
            "##      #%             #",
            "###     #%%            #",
            "####   ^#%%            #",
            "#      ##%%%           #",
            "#     ###%%%%          #",
            "#^   ####%%%%          #",
            "##      #%%%%%         #",
            "###     #%%%%%%        #",
            "####   ^#%%%%%%        #",
            "#      ##%%%%%%%       #",
            "#     ###%%%%%%%%      #",
            "#^   ####%%%%%%%%      #",
            "##      #%%%%%%%%%     #",
            "###     #%%%%%%%%%%    #",
            "####   ^#%%%%%%%%%%    #",
            "#      ##%%%%%%%%%%%   #",
            "#     ###%%%%%%%%%%%%  #",
            "#@   ####%%%%%%%%%%%% $#",
            "########################",
        ],
    },
    {
        level: 6,
        name: "Question 3: Economics",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     +   -   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 7,
        name: "Level 4: Double Trouble",
        map: [
            "########################",
            "#         $##         $#",
            "#          ##          #",
            "#        ^###        ^##",
            "#          ##          #",
            "#    ##    ##    ##    #",
            "#          ##          #",
            "##^        ###^        #",
            "#    ##    ##    ##    #",
            "#          ##          #",
            "#        ^###        ^##",
            "#    ##    ##    ##    #",
            "#          ##          #",
            "##^        ###^        #",
            "#    ##    ##    ##    #",
            "#          ##          #",
            "#        ^###        ^##",
            "#    ##    ##    ##    #",
            "#          ##          #",
            "##^        ###^        #",
            "#    ##    ##    ##    #",
            "#         ###         ##",
            "#@         ##@         #",
            "########################",
        ],
    },
    {
        level: 8,
        name: "Question 4: Computer Science",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   +   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 9,
        name: "Level 5: Almost a Mirror",
        map: [
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#               #     $#",
            "#         #            #",
            "#       #              #",
            "#     #                #",
            "#   #      ^     ^     #",
            "#@#        #%%%%%#     #",
            "########################",
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#            #         #",
            "#        #             #",
            "#   #                  #",
            "#@            #%%%%%#  #",
            "########################",
        ],
    },
    {
        level: 10,
        name: "Question 5: Maths",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   -   -   +    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 11,
        name: "Level 6: Going under",
        map: [
            "########################",
            "#          ##          #",
            "#          ##  $       #",
            "#@         ##  #       #",
            "######    ###          #",
            "#%%%%%    ###      #   #",
            "#%%%%%    ###          #",
            "#%%%%     %##  #       #",
            "#%%%%     %##          #",
            "#%%%     %%##      #   #",
            "#%%%     %%##          #",
            "#%%     %%%##  #       #",
            "#%%     %%%##          #",
            "#%     %%%%##      #   #",
            "#%     %%%%##          #",
            "##    %%%%%##  #       #",
            "##    %%%%%##          #",
            "##    #######      #####",
            "##    ########         #",
            "##    #########        #",
            "##    ##########       #",
            "##    ###########      #",
            "##    ############     #",
            "##    #############    #",
            "##                    ##",
            "##                   ###",
            "########################",
        ],
    },
    {
        level: 12,
        name: "Question 6: Physics",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   +   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 13,
        name: "Level 7: Spikes",
        map: [
            "########################",
            "#!!!!!!!!!!!!!!!       #",
            "#$                     #",
            "###################    #",
            "#                     ^#",
            "#                    ###",
            "#                   ^###",
            "#                  ###!#",
            "#                 ^##! #",
            "#                ###!  #",
            "#               ^##!   #",
            "#              ###!    #",
            "#             ^##!     #",
            "#            ###!      #",
            "#           ^##!       #",
            "#          ###!        #",
            "#         ^##!         #",
            "#        ###!          #",
            "#       ^##!           #",
            "#      ###!            #",
            "#     ^##!             #",
            "#    ###!              #",
            "#@  ^##^^^^^^^^^^^^^^^^#",
            "########################",
            ],
    },
    {
        level: 14,
        name: "Question 7: Biology",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#   -    -    -    +   #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
   {
        level: 15,
        name: "Level 8: The Lake of fire",
        map: [
            "########################",
            "#%%%%%%%%%%%%%%%%%%%%%%#",
            "#%%%%%%%%%%%%%%%%%%%%%%#",
            "#%%%%%%%%%%%%%%%%%%%%%%#",
            "#%%%%%%%%%%%%%%%%%%%%%%#",
            "#%%%%%%%%%%%%%%%%%%%%%%#",
            "#                     %#",
            "#                     %#",
            "#                     %#",
            "#              #      %#",
            "#              %      %#",
            "#         #    %      %#",
            "#             #%      %#",
            "#                     %#",
            "#        # #          %#",
            "#       #             %#",
            "##                    %#",
            "#       ^             %#",
            "#      ##             ##",
            "##                     #",
            "#                     $#",
            "# #%%%%%%%%%%%%%%%%%%%%#",
            "#@#%%%%%%%%%%%%%%%%%%%%#",
            "########################",
        ],
    },
    {
        level: 16,
        name: "Question 8: Maths",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     -   +   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
      {
        level: 17,
        name: "Level 9: Grey Scale",
        map: [
            "########################",
            "#                 !! !!#",
            "#                      #",
            "#  #                   #",
            "#  #         ^        @#",
            "#  ##        ##   ######",
            "#  ###    ^            #",
            "#  # ##  ##     ^      #",
            "#  #         ####      #",
            "#  #                   #",
            "#  #  ^^^^^^^^^^^^^^^^^#",
            "##   ###################",
            "###                    #",
            "# ##                   #",
            "#  ##               #  #",
            "#       #          ##  #",
            "#              #    #  #",
            "#     #    #        #  #",
            "#                   #  #",
            "#                   #  #",
            "#^^^^^^^^^^^^^^^^^^^#  #",
            "#####################  ##",
            "#$                     #",
            "########################",
        ],
    },
    {
        level: 18,
        name: "Question 9: Maths",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#     +   -   -   -    #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
    {
        level: 19,
        name: "Level 10: Long Way Down",
        map:[
            "########################",
            "# @               ^    #",
            "# #               #    #",
            "#        #   ^         #",
            "#      ^     #         #",
            "# #    #     !    #    #",
            "# !         #          #",
            "#     #     !          #",
            "#     !             #  #",
            "#        #    #     !  #",
            "# #   #           #    #",
            "#  ^     ^  #     !    #",
            "#  #     #          #  #",
            "#                      #",
            "#    #    #            #",
            "#         !   ^        #",
            "#     #       #        #",
            "#                      #",
            "#        #    #        #",
            "#   ^         !     #  #",
            "#   #       ^          #",
            "#           #          #",
            "#^^^^^^^^^^^^^^^^^^^^^$#",
            "########################",
            ],
    },
    {
        level: 20,
        name: "Question 10: Chemistry",
        map:[
            "########################",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#                      #",
            "#   +    -    -    -   #",
            "#                      #",
            "#                      #",
            "#@                     #",
            "########################",
        ],
    },
];

var levelText = function() {
    
    fill(0, 0, 0);
    if      (l === 0) {
        
        text("Hello, Player!\nUse Arrow keys or WAD to move.\nJump over those spikes and get to the portal!", 300, 250);
        
    }
    else if (l === 1) {
        
        text("“A sea of gold” - What is the literary device used here?", 300, 300);
        text("       Onomatopoeia    \tHyperbole     \tSimile       Metaphor", 280, 450);
    }

    else if (l === 2) {
        
        text("Don't fall into that lava!", 300, 300);
    }
    
    else if(l === 3) {
        
        text("Select the correct spelling", 300, 300);
        text("Aceleration\t   Acelaration\t   Acceleration\t   Accelaration", 300, 450);
    }
    
    else if (l === 4) {
        
        text("That looks\nlike a far jump...", 125, 75);
    }
    
    else if (l === 5) {
        
        text("What is an example of the factor of production - Capital", 300, 300);
        text("      Train\t     Lumberjacks\t     Farmland\t     Bussinessman", 330, 450);
    }
    
    else if (l === 6) {
        
        text("Sometimes there may be\nmore than one player...", 130, 75);
    }
    
    else if (l === 7) {
        
        text('This inventor is considered the "Father of Computers"', 300, 300);
        text("Nikola\nTesla", 160, 430);
        text("Charles\nBabbage", 260, 430);
        text("Leonardo\nDa Vinci", 360, 430);
        text("Tim\nBerners-Lee", 460, 430);
    }
    
    else if (l === 8) {
        
        text("If either player dies,\nthe other will die too!", 300, 100);
        
    }
    else if (l === 9) {
        
        text("What is the formula for the gradient of a line", 300, 300);
        text("Adjacent\nHypotenuse", 160, 430);
        text("y = mx + c", 260, 430);
        text("Run\nRise", 360, 430);
        text("Rise\nRun", 460, 430);
    }
    else if (l === 11) {
        
        text("Light waves pass from air into glass and\nare refracted. What always remains constant\nwhen this happens?", 300, 300);
        text("Direction", 160, 450);
        text("Frequency", 260, 450);
        text("Speed", 360, 450);
        text("Wavelength", 460, 450);
    }
    
    else if (l === 13) {
        
        text("What is Mitosis?", 300, 250);
        text("Division\nof cells\nthat divide\nonly twice", 110, 390);
        text("Transfer of cells\nthrough a\npermeable\nmembrane\nfrom an area\nof high\nconcentration", 235, 330);
        text("Breaking down\nof Glucose", 365, 440);
        text("The Constant\ndivision\nof cells", 485, 420);
    }
    
    else if (l === 15) {
        
        text("What is x² multiplied by x²", 300, 300);
        text("2x²", 160, 450);
        text("x⁴", 265, 450);
        text("2x", 360, 450);
        text("x²²", 460, 450);
    }
    
    else if (l === 17) {
        
        text("How can (a+b)² be expanded?", 300, 300);
        text("a² + 2ab + b²", 160, 450);
        text("a² + b²", 260, 450);
        text("a² - 2ab + b²", 360, 450);
        text("-a² - b²", 460, 450);
    }
    
    else if (l === 18) {
        
        text("Last level!\nYou're almost done...", 475, 400);
    }
    else if (l === 19) {
        
        text("How would you separate a mixture of salt and sand", 300, 300);
        text("Evaporation", 110, 450);
        text("Centrifugation", 240, 450);
        text("Distillation", 360, 450);
        text("Condensation", 480, 450);
    }
};

var rectCollide = function(obj1, obj2) {
    return ((obj1.x + obj1.width > obj2.x) && (obj1.x < obj2.x + obj2.width) && (obj1.y + obj1.height > obj2.y) && (obj1.y < obj2.y + obj2.height));
};

// item functions
{
var Player = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
    
    this.yVelocity = 5;
    this.yAcceleration = 0.2;
    this.xVelocity = 0;
};

Player.prototype.moveX = function() {
    if (input[LEFT] || input[65]) {
        this.xVelocity = -3;
    } else if (input[RIGHT] || input[68]) {
        this.xVelocity = 3;
    } else {
        this.xVelocity = 0;
    }
    
    this.x += this.xVelocity;
};

Player.prototype.moveY = function() {
    if ((input[UP] || input[87]) && abs(this.yVelocity) < 0.1 && abs(this.yAcceleration) < 0.1) {
        this.yVelocity = -5;
    }
    if (this.yVelocity < 8) {
        this.yAcceleration = 0.2;
    } else {
        this.yAcceleration = 0;
    }
    this.y += this.yVelocity;
    this.yVelocity += this.yAcceleration;
};

Player.prototype.display = function() {
    noStroke();
    fill(playerColor);
    rect(this.x, this.y, this.width, this.height);
};

var players = [];

var Block = function(config) {
    this.x = config.x;
    this.y = config.y;
    //Default size is 25
    this.width = config.width || 25;
    this.height = config.height || 25;
};

Block.prototype.collideX = function(object) {
    if (rectCollide(this, object)) {
        if (object.x > this.x) {
            object.x = this.x + this.width;
            object.xVelocity = 0;
        } else {
            object.x = this.x - object.width;
            object.xVelocity = 0;
        }
    }
};

Block.prototype.collideY = function(object) {
    if (rectCollide(this, object)) {
        if (object.y > this.y) {
            object.y = this.y + this.height;
            object.yVelocity *= -1;
        } else {
            object.y = this.y - object.height;
            object.yVelocity = 0;
            object.yAcceleration = 0;
        }
    }
};

Block.prototype.display = function() {
    fill(0, 0, 0);
    noStroke();
    rect(this.x, this.y, this.width, this.height);
};

var blocks = [];

var IBlock = function(config) {
    this.x = config.x;
    this.y = config.y;
    //Default size is 25
    this.width = config.width || 25;
    this.height = config.height || 25;
};

IBlock.prototype.collideX = function(object) {
    if (rectCollide(this, object)) {
        if (object.x > this.x) {
            object.x = this.x + this.width;
            object.xVelocity = 0;
        } else {
            object.x = this.x - object.width;
            object.xVelocity = 0;
        }
    }
};

IBlock.prototype.collideY = function(object) {
    if (rectCollide(this, object)) {
        if (object.y > this.y) {
            object.y = this.y + this.height;
            object.yVelocity *= -1;
        } else {
            object.y = this.y - object.height;
            object.yVelocity = 0;
            object.yAcceleration = 0;
        }
    }
};

IBlock.prototype.display = function() {
    fill(255, 255, 255);
    noStroke();
    rect(this.x, this.y, this.width, this.height);
};

var blocks = [];

var Lava = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

Lava.prototype.display = function() {
    fill(255, 50 + sin(frameCount * 2) * 50, 0);
    noStroke();
    rect(this.x, this.y, this.width, this.height);
    
};

Lava.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        LevelStatus = "lost";
    }
};

var lavas = [];

var fake = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

fake.prototype.display = function() {
    fill(0, 4, 255);
    noStroke();
    rect(this.x, this.y, this.width, this.height);
    
fake.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        LevelStatus = "lost";
    }
};

var fake = [];
    
};

var Spike = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

Spike.prototype.display = function() {
    fill(59, 59, 59);
    noStroke();
    triangle(this.x, this.y + 25, this.x + 25, this.y + 25, this.x + 12.5, this.y);
};

Spike.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        LevelStatus = "lost";
    }
};

var spikes = [];

var USpike = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

USpike.prototype.display = function() {
    fill(59, 59, 59);
    noStroke();
    triangle(this.x, this.y, this.x + 12.5, this.y + 25, this.x + 25, this.y);
};

USpike.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        LevelStatus = "lost";
    }
};

var uspikes = [];

var Portal = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

Portal.prototype.display = function() {
    fill(0, 0, 0);
    noStroke();
    ellipse(this.x + 12.5, this.y + 12.5, this.width, this.height);
    fill(219, 35, 35);
    ellipse(this.x + 12.5, this.y + 12.5, this.width - 7, this.height - 7);
    
    fill(0, 0, 0);
    ellipse(this.x + 12.5, this.y + 12.5, this.width - 14, this.height - 14);
    
    fill(7, 69, 224);
    ellipse(this.x + 12, this.y + 12.5, this.width - 21, this.height - 21);
    
};

Portal.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        if (l === 19) {
            scene = "score";
        } else {
            LevelStatus = "won";
        }
    }
};

var portals = [];
}

var fakelife = function(config) {
    this.x = config.x;
    this.y = config.y;
    this.width = config.width || 25;
    this.height = config.height || 25;
};

fakelife.prototype.display = function() {
    fill(0, 4, 255);
    noStroke();
    rect(this.x, this.y, this.width, this.height);

fakelife.prototype.collide = function(object) {
    if (rectCollide(this, object)) {
        if (l === 19) {
            scene = "score";
        } else {
            LevelStatus = "won";
        }
    }
};

var fakelife = [];
};

var LevelRestart = function() {
    players[l] = [];
    blocks[l] = [];
    lavas[l] = [];
    fake[l] = [];
    portals[l] = [];
    fakelife[l] = [];
    spikes[l] = [];
    uspikes[l] = [];
    for(var columnNum = 0; columnNum < levelMap[l].map.length; columnNum++) {
        for(var rowNum = 0; rowNum < levelMap[l].map[columnNum].length; rowNum++) {
            var Y = columnNum * 25;
            var X = rowNum * 25;
            switch (levelMap[l].map[columnNum][rowNum]) {
                case "#":
                    blocks[l].push(new Block({
                        x: X,
                        y: Y,
                    }));
                break;
                case "@":
                    players[l].push(new Player({
                        x: X,
                        y: Y,
                    }));
                break;
                case "%":
                    lavas[l].push(new Lava({
                        x: X,
                        y: Y,
                    }));
                break;
                case "$":
                    portals[l].push(new Portal({
                        x: X,
                        y: Y,
                    }));
                break;
                case "^":
                    spikes[l].push(new Spike({
                        x: X,
                        y: Y,
                    }));
                break;
                case "-":
                    fake[l].push(new fake({
                        x: X,
                        y: Y,
                    }));
                break;
                case "+":
                    fakelife[l].push(new fakelife({
                        x: X,
                        y: Y,
                    }));
                break;
                case "!":
                    uspikes[l].push(new USpike({
                        x: X,
                        y: Y,
                    }));
                break;
            }
        }
    }
};

LevelRestart();

var scoreGame = function() {
    
    seconds += 1/this.__frameRate;
    if (round(seconds) >= 60) {
        
        minutes++;
        seconds -= 60;
        
    }
    
    if (LevelStatus === "lost") {
        LevelRestart();
        LevelStatus = "playing";
        deaths++;
    }
    else if (LevelStatus === "won") {
        l++;
        LevelRestart();
        LevelStatus = "playing";
    }
    
    // tons of for loops
    {
        
        // display
        for (var blockNum  = 0;
            blockNum < blocks[l].length;
            blockNum++)
        {
            blocks[l][blockNum].display();
        }
        for (var lavaNum   = 0;
            lavaNum < lavas[l].length;
            lavaNum++)
        {
            lavas[l][lavaNum].display();
        }
        for (var fakeNum   = 0;
            fakeNum < fake[l].length;
            fakeNum++)
        {
            fake[l][fakeNum].display();
        }
        for (var portalNum = 0;
            portalNum < portals[l].length;
            portalNum++)
        {
            portals[l][portalNum].display();
        }
        for (var fakelifeNum = 0;
            fakelifeNum < fakelife[l].length;
            fakelifeNum++)
        {
            fakelife[l][fakelifeNum].display();
        }
        for (var spikeNum  = 0;
            spikeNum < spikes[l].length;
            spikeNum++)
        {
            spikes[l][spikeNum].display();
        }
        for (var uspikeNum = 0;
            uspikeNum < uspikes[l].length;
            uspikeNum++)
        {
            uspikes[l][uspikeNum].display();
                }
        for (var playerNum = 0;
            playerNum < players[l].length;
            playerNum++)
        {
            players[l][playerNum].display();
        }
        for (var playerNum = 0;
            playerNum  < players[l].length;
            playerNum++)
        {
            players[l][playerNum].moveX();
        }
        
        // X collisions
        for (var blockNum  = 0;
            blockNum < blocks[l].length;
            blockNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
                {
                    blocks[l][blockNum].collideX(players[l][playerNum]);
                }
        }
        for (var lavaNum   = 0;
            lavaNum < lavas[l].length;
            lavaNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                lavas[l][lavaNum].collide(players[l][playerNum]);
            }
        }
        for (var fakeNum   = 0;
            fakeNum < fake[l].length;
            fakeNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                fake[l][fakeNum].collide(players[l][playerNum]);
            }
        }
        for (var portalNum = 0;
            portalNum < portals[l].length;
            portalNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                portals[l][portalNum].collide(players[l][playerNum]);
            }
        }
        for (var fakelifeNum = 0;
            fakelifeNum < fakelife[l].length;
            fakelifeNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                fakelife[l][fakelifeNum].collide(players[l][playerNum]);
            }
        }
        for (var spikeNum  = 0;
            spikeNum < spikes[l].length;
            spikeNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                spikes[l][spikeNum].collide(players[l][playerNum]);
            }
        }
        for (var uspikeNum = 0;
            uspikeNum < uspikes[l].length;
            uspikeNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                uspikes[l][uspikeNum].collide(players[l][playerNum]);
            }
        }
        for (var playerNum = 0;
            playerNum < players[l].length;
            playerNum++)
        {
            players[l][playerNum].moveY();
        }
        
        // Y collisions
        for (var blockNum  = 0;
            blockNum < blocks[l].length;
            blockNum++)
        {
            for (var playerNum = 0;
                playerNum < players[l].length;
                playerNum++)
            {
                blocks[l][blockNum].collideY(players[l][playerNum]);
            }
        }
        
    }
    
    fill(255, 255, 255);
    textSize(20);
    textAlign(CENTER);
    text("Deaths: " + deaths, 150, 20);
    text(levelMap[l].name, 300, 594);
    text("Time: " + minutes + " minutes " + round(seconds) + " seconds", 450, 20);
};

var scoreScene = function() {
    
    var score = (2000 - ((deaths * 25) + (minutes * 60) + (round(seconds))));
    
    fill(0, 0, 0);
    textSize(50);
    text("Congratulations! You won!", 300, 250);
    textSize(30);
    text("Score: " + score, 300, 350);
    
};

draw = function() {
    
    background(255, 255, 255);
    
    switch (scene) {
        
        case "play":
            scoreGame();
            levelText();
        break;
        case "score":
            scoreScene();
        
    }
};

//                                  }||
//                          \\===//


